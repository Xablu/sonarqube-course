// find the "tool" in Jenkins under Global Tool Configuration. Find the withSonarQubeEnv in the Jenkins System Configuration
def SQPROJECTKEY = "nodejsapp"
def SQSCANNERHOME = "sonar-scanner"
def SQENV = "sonarqube"
def NODEADDRES =""

pipeline {
    agent any
    tools {nodejs "Node-14"}
    environment {
        CI = 'true'
    }
    stages {
        stage('prepare') {
            steps {
                sh 'echo "Installing project dependencies.."'
                dir('webapp') {
                    sh 'npm install --save-dev cross-env'
                }
            }
        }
        stage('Quality Checks') {
            environment {
                scannerHome = tool 'sonar-scanner'
                SQTOKEN = credentials('sonarqube')
                sqhost = "${SQHOSTURL}"
                sqkey = "${SQPROJECTKEY}"
            }

            steps {
                script {
                    NODEADDRESS = sh ( 
                        script: 'echo $(echo ${JENKINS_URL} | awk -F\'//|:80\' \'{print $2}\')',
                        returnStdout: true
                        ).trim()
                }
                sh 'echo "Running SonarScanner..."'
                withSonarQubeEnv("${SQENV}") {
                    sh('${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=$sqkey -Dsonar.host.url="${NODEADDRESS}":9000 -Dsonar.login=$SQTOKEN')
                }
                
                dir('webapp') {
                    sh 'echo "Running npm test"'
                    sh 'npm test'
                }
            }
        }
        stage('Build App') {
            steps {
                sh 'echo "Building optimized NodeJS app..."'
                dir ('webapp') {
                    sh 'npm run-script build'
                }
                sh 'echo "Copy public folder to staging area.."'
                sh 'cp -r ./webapp/build ./bonus'
            }
        }
        stage('Build Container') {
            steps {
                dir ('bonus') {
                    script {
                        docker.build('nodejsapp-sq:latest')
                    }
                }
            }
        }
    }
}